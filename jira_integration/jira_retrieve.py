# import jira
import httpx
import requests
TOKEN="eyJraWQiOiJhdXRoLmF0bGFzc2lhbi5jb20tQUNDRVNTLWE5Njg0YTZlLTY4MjctNGQ1Yi05MzhjLWJkOTZjYzBiOTk0ZCIsImFsZyI6IlJTMjU2In0.eyJqdGkiOiIxNTQxMjE0Yy1mOGU1LTRkNjAtYmQxNC05MGQ1NjAzNTNiZDkiLCJzdWIiOiI3MDEyMTo2Yzc1MDg4OS0xNTZiLTQxZGQtYjgxZC05ZTM2YzY5ZDhiNzgiLCJuYmYiOjE3Mjc2MzI3MzEsImlzcyI6Imh0dHBzOi8vYXV0aC5hdGxhc3NpYW4uY29tIiwiaWF0IjoxNzI3NjMyNzMxLCJleHAiOjE3Mjc2MzYzMzEsImF1ZCI6ImtwWkZvclkzRm1KNVNlclphR1puS2YzS3o1STZxRjRzIiwiY2xpZW50X2lkIjoia3BaRm9yWTNGbUo1U2VyWmFHWm5LZjNLejVJNnFGNHMiLCJodHRwczovL2F0bGFzc2lhbi5jb20vc3lzdGVtQWNjb3VudEVtYWlsIjoiM2FhZjJjODQtMzhkOC00YWZjLTkxYWUtMzdiZmYzZTI0Zjc4QGNvbm5lY3QuYXRsYXNzaWFuLmNvbSIsImh0dHBzOi8vYXRsYXNzaWFuLmNvbS9zeXN0ZW1BY2NvdW50SWQiOiI3MTIwMjA6Y2NhZWEwNDItNDM0Mi00NWI3LWI5YWEtMWYzYWMzNWY0OGU2IiwiaHR0cHM6Ly9pZC5hdGxhc3NpYW4uY29tL3VqdCI6ImYxNGEwYjZkLTA2MjktNDMxYy04NTNjLWEzYmYyMTgwODA4ZSIsImh0dHBzOi8vaWQuYXRsYXNzaWFuLmNvbS9zZXNzaW9uX2lkIjoiYjFhZDdjNWEtMWQ1Ni00ZDQ1LTg5MGQtZDg5ODU4ZGJkYjNmIiwiaHR0cHM6Ly9pZC5hdGxhc3NpYW4uY29tL2F0bF90b2tlbl90eXBlIjoiQUNDRVNTIiwiaHR0cHM6Ly9hdGxhc3NpYW4uY29tL2ZpcnN0UGFydHkiOmZhbHNlLCJodHRwczovL2F0bGFzc2lhbi5jb20vdmVyaWZpZWQiOnRydWUsInNjb3BlIjoicmVhZDphcHBsaWNhdGlvbi1yb2xlOmppcmEgcmVhZDphdHRhY2htZW50OmppcmEgcmVhZDplbnRpdGxlbWVudHM6ZnNhZyByZWFkOmlzc3VlLXR5cGUtc2NyZWVuLXNjaGVtZTpqaXJhIHJlYWQ6aXNzdWUtc2VjdXJpdHktbGV2ZWw6amlyYSByZWFkOmlzc3VlLmNoYW5nZWxvZzpqaXJhIHJlYWQ6ZmlsdGVyLmNvbHVtbjpqaXJhIHJlYWQ6aXNzdWU6amlyYSByZWFkOmVudGl0bGVtZW50czpjY2cgcmVhZDpkYXNoYm9hcmQ6amlyYSByZWFkOmZpZWxkLm9wdGlvbjpqaXJhIHJlYWQ6bGljZW5zZTpqaXJhIHJlYWQ6aXNzdWUtc2VjdXJpdHktc2NoZW1lOmppcmEgcmVhZDppc3N1ZS13b3JrbG9nOmppcmEgcmVhZDppc3N1ZS5wcm9wZXJ0eTpqaXJhIHJlYWQ6cHJpb3JpdHk6amlyYSByZWFkOmlzc3VlLWRldGFpbHM6amlyYSByZWFkOmlzc3VlLXR5cGUtaGllcmFyY2h5OmppcmEgcmVhZDpmaWVsZC5vcHRpb25zOmppcmEgcmVhZDppc3N1ZS10eXBlOmppcmEgcmVhZDpjb21tZW50LnByb3BlcnR5OmppcmEgcmVhZDpyZXNvbHV0aW9uOmppcmEgcmVhZDppc3N1ZS1saW5rLXR5cGU6amlyYSByZWFkOmlzc3VlLWxpbms6amlyYSByZWFkOmlzc3VlLXdvcmtsb2cucHJvcGVydHk6amlyYSByZWFkOmNvbW1lbnQ6amlyYSByZWFkOmZpZWxkLWNvbmZpZ3VyYXRpb24tc2NoZW1lOmppcmEgcmVhZDppc3N1ZS10eXBlLnByb3BlcnR5OmppcmEgcmVhZDppc3N1ZS52b3RlOmppcmEgcmVhZDpmaWVsZC1jb25maWd1cmF0aW9uOmppcmEgcmVhZDpmaWx0ZXIuZGVmYXVsdC1zaGFyZS1zY29wZTpqaXJhIHJlYWQ6YXZhdGFyOmppcmEgcmVhZDppc3N1ZS1tZXRhOmppcmEgcmVhZDppc3N1ZS53YXRjaGVyOmppcmEgcmVhZDphdWRpdC1sb2c6amlyYSByZWFkOmRhc2hib2FyZC5wcm9wZXJ0eTpqaXJhIHJlYWQ6Z3JvdXA6amlyYSByZWFkOnByb2plY3QuYXZhdGFyOmppcmEgcmVhZDpjdXN0b20tZmllbGQtY29udGV4dHVhbC1jb25maWd1cmF0aW9uOmppcmEgcmVhZDppc3N1ZS1zdGF0dXM6amlyYSByZWFkOmlzc3VlLXR5cGUtdHJhbnNpdGlvbjpqaXJhIHJlYWQ6ZmlsdGVyOmppcmEgcmVhZDppc3N1ZS50cmFuc2l0aW9uOmppcmEgcmVhZDpmaWVsZDpqaXJhIHJlYWQ6bm90aWZpY2F0aW9uLXNjaGVtZTpqaXJhIHJlYWQ6aXNzdWUucmVtb3RlLWxpbms6amlyYSByZWFkOmlzc3VlLWZpZWxkLXZhbHVlczpqaXJhIHJlYWQ6aXNzdWUtdHlwZS1zY2hlbWU6amlyYSByZWFkOmZpZWxkLmRlZmF1bHQtdmFsdWU6amlyYSIsImh0dHBzOi8vaWQuYXRsYXNzaWFuLmNvbS9wcm9jZXNzUmVnaW9uIjoidXMtZWFzdC0xIiwiaHR0cHM6Ly9hdGxhc3NpYW4uY29tL2VtYWlsRG9tYWluIjoiZ21haWwuY29tIiwiaHR0cHM6Ly9hdGxhc3NpYW4uY29tLzNsbyI6dHJ1ZSwiaHR0cHM6Ly9hdGxhc3NpYW4uY29tL29hdXRoQ2xpZW50SWQiOiJrcFpGb3JZM0ZtSjVTZXJaYUdabktmM0t6NUk2cUY0cyIsImh0dHBzOi8vaWQuYXRsYXNzaWFuLmNvbS92ZXJpZmllZCI6dHJ1ZSwiaHR0cHM6Ly9hdGxhc3NpYW4uY29tL3N5c3RlbUFjY291bnRFbWFpbERvbWFpbiI6ImNvbm5lY3QuYXRsYXNzaWFuLmNvbSJ9.twwxTCzNahNizyUtb5ABW2FIQE5wY9uV8kUIaQ9Qpx9K4GzZfBzT5rRUoQQxXffWeHYvP6_-rndOftVqnrZ0srkHFBtIDjA_rW92kjrqEBRjYwJkQvL05EV3J4BIAhcy7ZWDC81qRPovDshG7bD1pe4EqEBws7D9Dwan0tzRVQ_x6VcxkdC05i8IGtz63aLpZwrdTTp19HGezdXzXIF4zs3k0T5wY0oijYYDztdxt4fdsK0wFAxzeA2VRN75QHA79mYW5FwpzSo0Km0iTY5sw_JsiipZB9vw8NZhejgp041K_O10Dr1qJWiZ2UpLg4k6U7hRC5sJOfF-U_w2d0bztg"
# oauth_dict = {
#     'access_token': TOKEN,
#     'consumer_key': "kpZForY3FmJ5SerZaGZnKf3Kz5I6qF4s",
#     'consumer_secret': "ATOATNDEGnmgm2oRwRDIJPpWgUA_ghPro4Ho2GTADYbW6BgQJsYIG75cm0bzdEZ9VdaD3FDCC732",
#     'key_cert': None,
#     'access_token_secret': None
# }
# client=jira.JIRA(server="https://mdliv2024.atlassian.net", oauth=oauth_dict)
# print(client.client_info())

def get_jira_data(url, access_token):
  headers = {
    'Authorization': f'Bearer {access_token}',
    'Accept': 'application/json'
  }

  response = requests.get(url, headers=headers)
  if response.status_code == 200:
    return response.json()
  else:
    print(f"Error fetching Jira data: {response.status_code}, {response.text}")
    return None

#data and permissions
response=httpx.get("https://api.atlassian.com/oauth/token/accessible-resources", headers=
{
    'Authorization': f'Bearer {TOKEN}',
    'Accept': 'application/json'
})
print(response.json())

jira_url = "https://api.atlassian.com/ex/jira/c933a17d-f53d-42d4-8c05-18fef872720f/rest/api/2/issue/SCRUM-1"
data=get_jira_data(jira_url, TOKEN)
print(data)